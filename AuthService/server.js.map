{"version":3,"sources":["server.es6"],"names":[],"mappings":";;;;;sBAGqB,UAAU;;+BACP,oBAAoB;;4BACjB,gBAAgB;;AAE3C,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,OAAO,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACzC,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;;;;AAMxC,OAAO,CAAC,GAAG,CAAC,0CAA0C,UAb9C,MAAM,CAaiD,CAAC;;AAEhE,MAAM,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;AACvB,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,YAAK;AACpB,MAAI,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,GAAG,CAAC;AAC5C,MAAI,SAAS,EAAE;AACX,WAAO,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;AACvD,aAAS,CAAC,KAAK,EAAE,CAAC;GACrB;CACJ,CAAC,CAAC;;AAEH,MAAM,CAAC,SAAS,GAAG,qBAvBX,SAAS,EAuBiB,CAAC;;;;;;AAOnC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAClC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC;AACjC,UAAQ,EAAE,IAAI;CACjB,CAAC,CAAC,CAAC;;AAEJ,kBAlCQ,YAAY,EAkCP,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC;;AAGvD,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,QAvCV,MAAM,CAuCW,IAAI,CAAC,CAAC;AAC/B,OAAO,CAAC,GAAG,CAAC,oBAAoB,GAAG,QAxC3B,MAAM,CAwC4B,IAAI,CAAC,CAAC","file":"server.js","sourcesContent":["/***\n * Auth service\n ***/\nimport {Config} from './config';\nimport {WebRoutes} from './webroutes-Config';\nimport {routeHandler} from './routeHandler';\n\nvar express = require('express');\nvar session = require('express-session');\nvar process = require('process');\nvar bodyParser = require('body-parser');\n\n\n/**\n * MAIN\n */\nconsole.log('constructing server with the following: ', Config);\n\nglobal.app = express();\nprocess.on('exit', ()=> {\n    let oneOfThem = global.server || global.app;\n    if (oneOfThem) {\n        console.log('Process quiting. trying to close server');\n        oneOfThem.close();\n    }\n});\n\nglobal.webRoutes = new WebRoutes();\n\n\n/*    global.app.set('trust proxy', 1); // Check this and whats the meaning\n console.log('starting session manager with options:', Config.sessionConfig);\n global.app.use(session(Config.sessionConfig));\n */\nglobal.app.use(bodyParser.json());       // to support JSON-encoded bodies\nglobal.app.use(bodyParser.urlencoded({     // to support URL-encoded bodies\n    extended: true\n}));\n\nrouteHandler(global.app, global.webRoutes.getRoutes());\n\n\nglobal.app.listen(Config.port);\nconsole.log('listening on port:' + Config.port);\n\n"]}