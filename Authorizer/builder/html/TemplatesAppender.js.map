{"version":3,"sources":["TemplatesAppender.es6"],"names":[],"mappings":";;AAAA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,eAAe,+BAAnB;AACA,IAAI,gBAAgB,8BAApB;AACA,IAAI,sBAAsB,eAA1B;AACA,IAAI,wBAAwB,KAAK,OAAL,CAAa,SAAb,EAAwB,YAAxB,CAA5B;AACA,IAAI,oBAAoB,KAAK,OAAL,CAAa,SAAb,EAAwB,aAAxB,CAAxB;AACA,IAAI,8BAA8B,KAAK,OAAL,CAAa,SAAb,EAAwB,mBAAxB,IAA+C,aAAjF;AACA,IAAI,WAAJ;AACA,IAAI,uBAAuB,EAA3B;AACA,IAAI,WAAW,EAAf;;AAEA,MAAM,WAAW,CAAC,GAAD,EAAM,WAAW,EAAjB,KAAwB;AACrC,OAAG,WAAH,CAAe,GAAf,EAAoB,OAApB,CAA4B,QAAQ;AAChC,mBAAW,GAAG,QAAH,CAAY,KAAK,IAAL,CAAU,GAAV,EAAe,IAAf,CAAZ,EAAkC,WAAlC,KACL,SAAS,KAAK,IAAL,CAAU,GAAV,EAAe,IAAf,CAAT,EAA+B,QAA/B,CADK,GAEL,SAAS,MAAT,CAAgB,KAAK,IAAL,CAAU,GAAV,EAAe,IAAf,CAAhB,CAFN;AAIH,KALD;AAMA,WAAO,QAAP;AACH,CARD;;AAUA,IAAI,SAAS,EAAb;AACA,SAAS,qBAAT,EAAgC,OAAhC,CAAyC,IAAD,IAAS;AAC7C,WAAO,IAAP,CAAY,GAAG,YAAH,CAAgB,IAAhB,EAAsB,OAAtB,CAAZ;AACH,CAFD;;AAIA,GAAG,QAAH,CAAY,iBAAZ,EAA+B,OAA/B,EAAwC,CAAC,GAAD,EAAM,IAAN,KAAe;AACnD,kBAAc,IAAd;AACI,kBAAc,YAAY,OAAZ,CAAoB,yBAApB,EAA+C,OAAO,IAAP,CAAY,MAAZ,CAA/C,CAAd;AACA,YAAQ,GAAR,CAAY,iBAAZ;AACA,OAAG,MAAH,CAAU,2BAAV,EAAuC,UAAU,GAAV,EAAe;;AAElD;AACA,YAAI,OAAO,IAAI,IAAJ,KAAa,QAAxB,EACI,MAAM,GAAN;;AAEJ,YAAI,UAAU,EAAC,MAAM,GAAP,EAAd;AACA,WAAG,SAAH,CAAa,2BAAb,EAA0C,WAA1C,EAAuD,OAAvD,EAAgE,UAAU,GAAV,EAAe;AAC3E,gBAAI,GAAJ,EAAS,MAAM,GAAN;AACT,oBAAQ,GAAR,CAAY,YAAZ;AACH,SAHD;AAIH,KAXD;AAYP,CAhBD","file":"TemplatesAppender.js","sourcesContent":["var path = require('path');\nvar fs = require('fs');\nvar templatesDir = '../../content/html/templates/';\nvar indexFullPath = '../../content/html/base.html';\nvar targetIndexFullPath = '../../content';\nvar resolvedTemplatesPath = path.resolve(__dirname, templatesDir);\nvar resolvedIndexPath = path.resolve(__dirname, indexFullPath);\nvar resolvedTargetIndexFullPath = path.resolve(__dirname, targetIndexFullPath) + '/index.html';\nvar indexMarkup;\nvar templatesBlockMarkup = [];\nvar filelist = [];\n\nconst walkSync = (dir, filelist = []) => {\n    fs.readdirSync(dir).forEach(file => {\n        filelist = fs.statSync(path.join(dir, file)).isDirectory()\n            ? walkSync(path.join(dir, file), filelist)\n            : filelist.concat(path.join(dir, file));\n\n    });\n    return filelist;\n};\n\nvar result = [];\nwalkSync(resolvedTemplatesPath).forEach((file)=> {\n    result.push(fs.readFileSync(file, 'utf-8'));\n});\n\nfs.readFile(resolvedIndexPath, 'utf-8', (err, data) => {\n    indexMarkup = data;\n        indexMarkup = indexMarkup.replace('<templates></templates>', result.join('\\r\\n'));\n        console.log('before unlink: ');\n        fs.unlink(resolvedTargetIndexFullPath, function (err) {\n\n            // Ignore error if no file already exists\n            if (err && err.code !== 'ENOENT')\n                throw err;\n\n            var options = {flag: 'w'};\n            fs.writeFile(resolvedTargetIndexFullPath, indexMarkup, options, function (err) {\n                if (err) throw err;\n                console.log('file saved');\n            });\n        });\n});\n\n\n"]}