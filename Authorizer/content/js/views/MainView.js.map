{"version":3,"sources":["MainView.es6"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA,MAAM,QAAQ,QAAQ,gBAAR,CAAd;AACA,MAAM,QAAQ,IAAI,KAAJ,EAAd;;AAEO,MAAM,QAAN,CAAgB;AACnB,kBAAc;;AAEV;;;;;;;;AAQD;;;;;;;;;;;AAWC;;;;;AAKA;;;;;AAKA;;;AAGH;;AAED,oCAAgC;AAC5B,eAAO,MAAM,GAAN,CAAU,2CAAV,CAAP;;AAEA;;;;;;;;;;;AAcH;AAtDkB;QAAV,Q,GAAA,Q","file":"MainView.js","sourcesContent":["import {BaseView} from './BaseView';\nimport {LoginController} from '../controllers/LoginController';\nimport {LoginView} from './LoginView';\nimport {ProductsView} from './ProductsView';\nimport {MyLicensesView} from './MyLicensesView';\nimport {PopupView} from './PopupView';\n\nconst Store = require('electron-store');\nconst store = new Store();\n\nexport class MainView  {\n    constructor() {\n\n        /**\n         * Check if user is already remember on the computer\n         * if so perform login and move to the licenses management\n         *\n         * if not show login page\n         *\n         */\n\n       /* let userCredentials = this.fetchUserCredentialsFromStore();\n        if (userCredentials) {\n            this.loginController = new LoginController();\n            this.loginController.login(userCredentials);\n        }\n        else {\n            this.loginView = new LoginView({\n                el: '#content'\n            });\n        }*/\n\n        /*\n         this.productsView = new ProductsView({\n         el: '#content'\n         });*/\n\n        /*  new PopupView({\n         el: '#content',\n         content: '<h1>big thing</h1><div>hello</div>'\n         })*/\n\n        /*     new MyLicensesView({\n         el: '#content'\n         })*/\n    }\n\n    fetchUserCredentialsFromStore() {\n        return store.get('Babelson.Authorizer.rememberMeCredentials');\n\n        /*      store.set('unicorn', 'ðŸ¦„');\n         console.log(store.get('unicorn'));\n         //=> 'ðŸ¦„'\n\n         // Use dot-notation to access nested properties\n         store.set('foo.bar', true);\n         console.log(store.get('foo'));\n         //=> {bar: true}\n\n         store.delete('unicorn');\n         console.log(store.get('unicorn'));\n         //=> undefined\n\n         }*/\n    }\n}\n"]}