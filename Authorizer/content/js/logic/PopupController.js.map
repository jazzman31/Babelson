{"version":3,"sources":["PopupController.es6"],"names":[],"mappings":";;;;;;;AAAA;;AAEO,MAAM,eAAN,CAAsB;AACzB,kBAAc;AACV,gBAAQ,GAAR,CAAY,8BAAZ;AACA,YAAI,2BAA2B,CAC3B,EAAC,MAAM,oBAAP,EAA6B,OAAO,aAApC,EAD2B,CAA/B;;AAIA,aAAK,sBAAL,CAA4B,wBAA5B;AACH;;AAED,2BAAuB,wBAAvB,EAAiD;AAC7C,iCAAyB,OAAzB,CAAkC,QAAD,IAAa;AAC1C,oBAAQ,GAAR,CAAY,mEAAZ;AACA,mBAAO,QAAP,CAAgB,QAAhB,CAAyB,SAAS,IAAlC,EAAwC,2BAAa,GAAb,CAAiB,SAAS,OAAT,CAAjB,CAAxC;AACH,SAHD;AAIH;AAfwB;QAAhB,e,GAAA,e","file":"PopupController.js","sourcesContent":["import {PopupFactory} from '../factories/PopupFactory';\n\nexport class PopupController {\n    constructor() {\n        console.log('initializing PopupController');\n        let popupEventNameCollection = [\n            {name: \"EVENT_LOGIN_FAILED\", popup: 'loginFailed'}\n        ];\n\n        this.constructPopupInvokers(popupEventNameCollection);\n    }\n\n    constructPopupInvokers(popupEventNameCollection) {\n        popupEventNameCollection.forEach((popEvent)=> {\n            console.log('Constructing popup \"${popEvent[\"popup\"]} for ${popEvent[\"name\"]}\"');\n            window.eventBus.listenTo(popEvent.name, PopupFactory.pop(popEvent['popup']));\n        });\n    }\n}"]}